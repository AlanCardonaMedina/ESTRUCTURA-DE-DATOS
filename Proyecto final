import time
class m_ordenamiento_B:
    def bubble(self,F):
        for i in range(len(F)-1):
            y = 0
            x = 1
            if F[i] > F[i+x]:
                y = F[i]
                F[i] = F[i+x]
                F[i+x] = y
                x += 1
                orden_B.bubble(F)
        return F
        
class m_ordenamiento_Q:
    def quicksort(self,F):
        p = int(len(F)/2)
        izq,mid,der = [],[],[]

        for i in range(len(F)):
            if F[i] < F[p]:
                izq.append(F[i])
            elif F[i] > F[p]:
                der.append(F[i])
            else:
                mid.append(F[i])

        if len(izq) > 1:
            izq = orden_Q.quicksort(izq)
        if len(der) > 1:
            der = orden_Q.quicksort(der)
        F= izq + mid + der
        return F
                
class m_ordenamiento_M:
    def mergesort(self,F):
        if len(F)>1:
            p = len(F)//2
            izq = F[:p]
            der = F[p:]

            orden_M.mergesort(izq)
            orden_M.mergesort(der)

            i = j = k = 0

            while i < len(izq) and j < len(der):
                if izq[i] < der[j]:
                    F[k] = izq[i]
                    i += 1
                else :
                    F[k] = der[j]
                    j += 1
                k+=1
            while i < len(izq):
                F[k] = izq[i]
                i += 1
                k += 1
            while j < len(der):
                F[k] = der[j]
                j += 1
                k += 1
            return F

class m_ordenamiento_S:
    def shellsort(self,F):
        p = len(F)//2
        while p >0:
            for i in range(p):
                aux = F[i]
                j = i
                while j >= p and F[j-p] > aux:
                    F[j] = F[j-p]
                    j -= p
                F[j] = aux
            p //= 2
        return F
       
orden_B = m_ordenamiento_B()
orden_Q = m_ordenamiento_Q()
orden_M = m_ordenamiento_M()
orden_S = m_ordenamiento_S()
F = [45,50,26,12,9,32,1,24,49,21,5,37,29,41,2,25,31,47,8,13,38,6,42,3,43,36,7,
     11,27,35,44,4,15,19,23,48,28,10,40,16,20,46,33,14,22,30,18,34,17,39]

print("Metodo bubble:")
inicio = time.time()
print(orden_B.bubble(F))
final = time.time()
tiempo = (final-inicio)
print("--- %s segundos ---" %tiempo)


print("Metodo quick sort:")
inicio = time.time()
print(orden_Q.quicksort(F))
final = time.time()
tiempo = (final-inicio)
print("--- %s segundos ---" %tiempo)


print("Metodo merge sort:")
inicio = time.time()
print(orden_M.mergesort(F))
final = time.time()
tiempo = (final-inicio)
print("--- %s segundos ---" %tiempo)


print("Metodo shell sort:")
inicio = time.time()
print(orden_S.shellsort(F))
final = time.time()
tiempo = (final-inicio)
print("--- %s segundos ---" %tiempo)
